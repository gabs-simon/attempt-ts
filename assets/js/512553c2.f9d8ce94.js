(self.webpackChunkattempt_ts_docs=self.webpackChunkattempt_ts_docs||[]).push([[834],{3854:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return m},default:function(){return c}});var p=n(2122),a=n(9756),i=(n(7294),n(3905)),r=["components"],o={id:"attempt",sidebar_position:1,sidebar_label:"Attempt"},s={unversionedId:"api/attempt",id:"api/attempt",isDocsHomePage:!1,title:"Attempt",description:"Attempt Type",source:"@site/docs/api/attempt.md",sourceDirName:"api",slug:"/api/attempt",permalink:"/attempt-ts/api/attempt",editUrl:"https://github.com/gabs-simon/attempt-ts/edit/master/website/docs/api/attempt.md",version:"current",sidebar_label:"Attempt",sidebarPosition:1,frontMatter:{id:"attempt",sidebar_position:1,sidebar_label:"Attempt"},sidebar:"tutorialSidebar",previous:{title:"Attempt-TS",permalink:"/attempt-ts/"},next:{title:"AsyncAttempt",permalink:"/attempt-ts/api/async-attempt"}},m=[{value:"Attempt Type",id:"attempt-type",children:[]},{value:"Attempt Function",id:"attempt-function",children:[]}],u={toc:m};function c(t){var e=t.components,n=(0,a.Z)(t,r);return(0,i.kt)("wrapper",(0,p.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"attempt-type"},"Attempt Type"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// Attempt<S,F>\ntype Attempt<S = any, F = any> = Success<S> | Failure<F>\n\n// Usual format of an Attempt function\nconst AttemptFunction = (...params): Attempt<S, F> => {\n  const s: S\n  const f: F\n  const result: boolean\n  if (result) return Success(s)\n  else return Failure(f) // Attempt returns failures\n}\n")),(0,i.kt)("p",null,"Defines the return type on an Attempt function."),(0,i.kt)("h2",{id:"attempt-function"},"Attempt Function"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// Attempt()\nconst Attempt = (operation: Attempt<S,F>): S\n\n// A generic attempt function\nconst AttemptFunction = (): Attempt<S,F>\n\n// Returns S or throws F\nAttempt(AttemptFunction())\n")),(0,i.kt)("p",null,"Unwraps the return value of an Attempt function, returning a value of type ",(0,i.kt)("inlineCode",{parentName:"p"},"S")," or throwing a value of type ",(0,i.kt)("inlineCode",{parentName:"p"},"F"),"."))}c.isMDXComponent=!0}}]);